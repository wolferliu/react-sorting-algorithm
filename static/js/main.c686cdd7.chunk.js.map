{"version":3,"sources":["sorting.js","App.js","index.js"],"names":["ACTION_HIGHLIGHT","ACTION_SWAP","initRandomArray","begin","end","count","ret","i","push","getRandomInt","Math","floor","random","swap","a","p1","p2","tmp","TheBars","props","h","highlighting","bars","numbers","map","item","index","myStyle","height","myClass","indexOf","flipId","className","style","flipKey","join","onComplete","spring","staggerConfig","default","speed","App","useState","numberList","setNumberList","highlight","setHighlight","actionIndexRef","useRef","sortActions","showNextAction","current","action","payload","console","log","prevList","tmp1","tmp2","swapAndReturn","length","setTimeout","delay","alert","onClick","innerArray","len","minIndex","j","selectionSort","bubbleSort","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c686cdd7.chunk.js","sourcesContent":["const ACTION_HIGHLIGHT = \"highlight\";\nconst ACTION_SWAP = \"swap\";\n\nfunction initRandomArray(begin, end, count) {\n  let ret = [];\n  for (let i = 0; i < count; i++) {\n    ret.push(getRandomInt(begin, end));\n  }\n  return ret;\n}\n\nfunction getRandomInt(begin, end) {\n  return Math.floor(Math.random() * (end - begin)) + begin;\n}\n\nfunction swap(a, p1, p2) {\n  const tmp = a[p1];\n  a[p1] = a[p2];\n  a[p2] = tmp;\n}\n\nconst selectionSort = (numberList) => {\n  let innerArray = [...numberList];\n  const len = innerArray.length;\n  let sortActions = [];\n  for (let i = 0; i < len - 1; i++) {\n    let minIndex = i;\n    for (let j = i + 1; j < len; j++) {\n      sortActions.push({\n        action: ACTION_HIGHLIGHT,\n        payload: [i, minIndex, j],\n        delay: 500\n      });\n      if (innerArray[j] < innerArray[minIndex]) {\n        minIndex = j;\n      }\n    }\n    if (i !== minIndex) {\n      sortActions.push({\n        action: ACTION_SWAP,\n        payload: [i, minIndex],\n        delay: 1000\n      });\n      swap(innerArray, i, minIndex);\n      //        console.log(i + \", \" + minIndex);\n    }\n  }\n  return sortActions;\n};\n\nconst bubbleSort = (numberList) => {\n  let innerArray = [...numberList];\n  const len = innerArray.length;\n  let sortActions = [];\n  for (let i = 0; i < len - 1; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      sortActions.push({\n        action: ACTION_HIGHLIGHT,\n        payload: [j, j + 1],\n        delay: 500\n      });\n      if (innerArray[j + 1] < innerArray[j]) {\n        sortActions.push({\n          action: ACTION_SWAP,\n          payload: [j, j + 1],\n          delay: 1000\n        });\n        swap(innerArray, j, j + 1);\n      }\n    }\n  }\n  return sortActions;\n};\n\nexport {\n  ACTION_HIGHLIGHT,\n  ACTION_SWAP,\n  initRandomArray,\n  selectionSort,\n  bubbleSort\n};\n","import \"./styles.css\";\n//import PropTypes from \"prop-types\";\nimport { useState, useRef } from \"react\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport {\n  ACTION_HIGHLIGHT,\n  bubbleSort,\n  initRandomArray,\n  selectionSort\n} from \"./sorting\";\nconst numberInArray = 15;\n\nfunction TheBars(props) {\n  const h = props.highlighting;\n  let bars = props.numbers.map((item, index) => {\n    const myStyle = { height: item * 10 };\n    const myClass = \"bar \" + (h.indexOf(index) === -1 ? \"\" : \" bar-highlight\");\n    return (\n      <Flipped key={index} flipId={item}>\n        <div className={myClass} style={myStyle}>\n          <span>{item}</span>\n        </div>\n      </Flipped>\n    );\n  });\n  const handleComplete = () => {\n    //console.log(\"handleComplete\");\n  };\n  return (\n    <Flipper\n      className=\"bar-container\"\n      flipKey={props.numbers.join(\"\") + \"-\" + props.highlighting.join(\"\")}\n      onComplete={handleComplete}\n      spring=\"gentle\"\n      staggerConfig={{\n        // the \"default\" config will apply to staggered elements without explicit keys\n        default: {\n          // default is .1, 0 < n < 1\n          speed: 0.9\n        }\n      }}\n    >\n      {bars}\n    </Flipper>\n  );\n}\n\nfunction swapAndReturn(a, p1, p2) {\n  const tmp1 = a[p1];\n  const tmp2 = a[p2];\n  return a.map((item, index) => {\n    if (index === p1) return tmp2;\n    if (index === p2) return tmp1;\n    return item;\n  });\n}\nexport default function App() {\n  const [numberList, setNumberList] = useState(\n    initRandomArray(2, 30, numberInArray)\n  );\n  const [highlight, setHighlight] = useState([]);\n  const actionIndexRef = useRef(0);\n  const sortActions = useRef([]);\n\n  const handleSelectionSort = () => {\n    sortActions.current = selectionSort(numberList);\n    alert(\"Sorting is finished, you can show the steps now.\");\n  };\n\n  const handleBubbleSort = () => {\n    sortActions.current = bubbleSort(numberList);\n    alert(\"Sorting is finished, you can show the steps now.\");\n  };\n\n  const handleShowIt = () => {\n    actionIndexRef.current = 0;\n    setTimeout(showNextAction, 500);\n  };\n  const showNextAction = () => {\n    const item = sortActions.current[actionIndexRef.current];\n    if (item.action === ACTION_HIGHLIGHT) {\n      setHighlight([...item.payload]);\n    } else {\n      console.log(actionIndexRef.current);\n      console.log(item.action + \" \" + item.payload);\n      setNumberList((prevList) =>\n        swapAndReturn(prevList, item.payload[0], item.payload[1])\n      );\n    }\n    actionIndexRef.current = actionIndexRef.current + 1;\n    if (actionIndexRef.current < sortActions.current.length) {\n      setTimeout(showNextAction, item.delay);\n    } else {\n      setTimeout(() => {\n        setHighlight([]);\n      }, 500);\n      alert(\"Done.\");\n    }\n  };\n  const handleReset = () => {\n    setNumberList(initRandomArray(2, 30, numberInArray));\n    setHighlight([]);\n    actionIndexRef.current = 0;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Sorting Algorithm</h1>\n      <TheBars numbers={numberList} highlighting={highlight} />\n      <button onClick={handleSelectionSort}>Selection Sort</button>\n      <button onClick={handleBubbleSort}>Bubble Sort</button>\n      <br />\n      <button onClick={handleShowIt}>Show the steps</button>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}